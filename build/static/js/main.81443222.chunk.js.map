{"version":3,"sources":["component/Navbar.js","component/Textform.js","component/Alert.js","component/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","prop","react_default","a","createElement","className","concat","bg","href","tittle","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","dist","aria-current","to","defaultProps","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","classNaame","value","onChange","event","target","rows","cols","onClick","newText","toUpperCase","toLowerCase","disabled","length","navigator","clipboard","writeText","split","join","Alert","props","alert","role","About","myStyle","mode","backgroundColor","aria-labelledby","data-bs-parent","App","setAlert","_useState3","_useState4","setMode","component_Navbar","align","setTimeout","for","react_router_dist","path","element","component_Textform","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.81443222.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navbar.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Navbar(prop) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg bg-${prop.bg===\"web1\"? \"success\":\"light\"}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{prop.tittle}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li> \r\n                    </ul>\r\n                    \r\n                </div>\r\n                </div>\r\n         \r\n\r\n            </nav>\r\n        \r\n        );\r\n}\r\nNavbar.propTypes = {\r\n    tittle: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    \r\n    tittle: \"textutildef\"\r\n}\r\nexport default  Navbar\r\n","// JavaScript source code\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nfunction Textform(prop) {\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n\r\n    // Credits: Coding Wala\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleOnClick = (event) => {\r\n        //console.log(\"UPPERCASE was CLICKED\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleOnClick_l = (event) => {\r\n        //console.log(\"UPPERCASE was CLICKED\")\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        //console.log(\"ON_CHANGE\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(\"Enter text here\");\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: prop.bg === \"web1\" ? \"black\" : \"white\" }}>\r\n                <div>\r\n                    <h4> {prop.heading}</h4>\r\n            <div classNaame=\"mb-3\">\r\n                <textarea classNaame=\"form-control\" value={text} onChange={handleOnChange} id=\"mybox\" rows=\"3\" cols=\"100\"></textarea>\r\n                </div>\r\n                    <button className=\"btn btn-primary\" onClick={handleOnClick}>ConvertUppeercase</button>\r\n                    <button className=\"btn btn-primary\" onClick={handleOnClick_l}>ConvertLowerercase</button>\r\n                    <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n                    <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n                    <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: prop.bg === \"web1\" ? \"black\" : \"white\" }} >\r\n                <h5> Your Text Summary</h5>\r\n                <p>Total words={text.split(\" \").length} and Total Charecters={text.length}</p>\r\n                <p> {0.008 * text.split(\" \").length}Minutes to read</p>\r\n            </div>\r\n            \r\n\r\n        </>\r\n            );\r\n\r\n        \r\n}\r\nexport default Textform","// JavaScript source code\r\n\r\n\r\nimport React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\" >\r\n            <strong>{props.alert}</strong>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // }) \r\n    let myStyle = {\r\n        color: props.mode === \"web1\"?'white' : '#042743',\r\n        backgroundColor: props.mode ===\"web1\" ? 'rgb(36 74 104)' : 'white',\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze Your text </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to use </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser Compatible </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React  from 'react'\r\nimport './App.css';\r\nimport Navbar from './component/Navbar';\r\nimport Textform from './component/Textform';\r\nimport {useState} from 'react';\r\nimport Alert from './component/Alert';\r\nimport About from './component/About';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Routes\r\n} from \"react-router-dom\";\r\n\r\n//import { connect } from \"react-redux\";\r\n\r\n\r\n\r\nfunction App() {\r\n    const [alert, setAlert] = useState(null);\r\n    const toogleMode = (event)=> {\r\n        if (mode === \"web1\") {\r\n            setMode(\"web2\");\r\n            setAlert(\"welcome to dark mode \");\r\n            setTimeout(() => {\r\n                setAlert(null);\r\n            }, 500);\r\n        } else {\r\n            setMode(\"web1\");\r\n            setAlert(\"welcome to light mode\");\r\n            setTimeout(() => {\r\n                setAlert(null);\r\n            }, 500);\r\n        }\r\n    }\r\n    const [mode, setMode] = useState(\"web1\");\r\n    \r\n    return (\r\n        <>\r\n            <Router>\r\n\r\n            <div className={mode}>\r\n                <Navbar tittle=\"TextUtils..\" bg={mode} />\r\n                <Alert alert={alert}/>\r\n                <div className=\"container-fluid\">\r\n\r\n                <div className=\"form-check form-switch\" align=\"left\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={toogleMode} id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"container my-3\">\r\n                        <Routes>\r\n                            <Route path=\"/about\" element={<About mode={mode} />} />\r\n                            <Route path=\"/\" element={<Textform heading=\"Text to analyze below\" bg={mode} />} />\r\n                        </Routes>   \r\n                    </div>\r\n           \r\n                </div>\r\n            </Router>           \r\n\r\n           \r\n        </>\r\n            );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n\r\n    \r\n             ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n   \n            <App />\n\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}